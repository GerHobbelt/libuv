name: Build Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure and make
        run: |
          mkdir -p build
          (cd build && cmake .. -DBUILD_TESTING=ON)
          cmake --build build -j 4
          build/uv_run_tests_a

      - name: Prepare output
        run: |
          pushd include
          zip -r ../include.zip .
          popd
          mv build/libuv.a ./libuv-macos11.a

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output-macos11
          path: |
            include.zip
            libuv-macos11.a
            LICENSE

  build-macos-arm64:
    runs-on: flyci-macos-large-latest-m2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure and make
        run: |
          mkdir -p build
          (cd build && cmake .. -DBUILD_TESTING=ON)
          cmake --build build -j 4
          build/uv_run_tests_a

      - name: Prepare output
        run: |
          pushd include
          zip -r ../include.zip .
          popd
          mv build/libuv.a ./libuv-macos-arm64.a

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output-macos-arm64
          path: libuv-macos-arm64.a

  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get RPi toolchain
        run: |
          wget https://github.com/sfjohnson/rpi-toolchain/releases/download/v0.0.8/arm-rpi-linux-gnueabihf.tar.xz
          tar xf arm-rpi-linux-gnueabihf.tar.xz -C ~

      - name: Configure and make linux-x64
        run: |
          mkdir -p build
          (cd build && cmake .. -DBUILD_TESTING=ON)
          cmake --build build -j 4
          build/uv_run_tests_a
          mv build/libuv.a ./libuv-linux-x64.a

      - name: Configure and make Android
        run: |
          cmake --build build --target clean
          cd build
          cmake .. -DBUILD_TESTING=OFF -DCMAKE_SYSTEM_NAME=Android -DCMAKE_ANDROID_API=30 -DCMAKE_C_COMPILER=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android30-clang
          cmake --build build -j 4
          mv build/libuv.a ./libuv-android30.a

      - name: Configure and make RPi
        run: |
          cmake --build build --target clean
          cd build
          cmake .. -DBUILD_TESTING=OFF -DCMAKE_C_COMPILER=/home/runner/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf-gcc
          cmake --build build -j 4
          mv build/libuv.a ./libuv-rpi.a

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output-linux
          path: |
            libuv-android30.a
            libuv-rpi.a
            libuv-linux-x64.a

  create-release:
    runs-on: ubuntu-22.04
    needs: [build-macos, build-linux, build-macos-arm64]
    steps:
      - name: Get build output macos11
        uses: actions/download-artifact@v4
        with:
          name: build-output-macos11

      - name: Get build output linux
        uses: actions/download-artifact@v4
        with:
          name: build-output-linux

      - name: Get build output macos-arm64
        uses: actions/download-artifact@v4
        with:
          name: build-output-macos-arm64

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            include.zip
            libuv-macos11.a
            libuv-android30.a
            libuv-macos-arm64.a
            libuv-rpi.a
            libuv-linux-x64.a
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
